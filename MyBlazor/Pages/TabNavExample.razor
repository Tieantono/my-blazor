@page "/tabnav-example"

<h3>TabNav Example</h3>

<EditForm Model="Form" OnValidSubmit="OnValidSubmit">
    <FluentValidator></FluentValidator>
    <TabNav TItem="SingleTextInputForm" Tabs="Tabs" OnClickAdd="OnClickAdd">
        <TabContent Context="form">
            <div class="card">
                <div class="card-body p-3">
                    <SingleForm FormModel="form"></SingleForm>
                </div>
            </div>
        </TabContent>
    </TabNav>

    <TabNav TItem="SingleTextInputForm" Tabs="SecondaryTabs" OnClickAdd="OnClickSecondaryAdd">
        <TabContent Context="form">
            <div class="card">
                <div class="card-body p-3">
                    <SingleForm FormModel="form"></SingleForm>
                </div>
            </div>
        </TabContent>
    </TabNav>

    <button type="submit" class="btn btn-block btn-primary">
        Submit
    </button>
</EditForm>

@if (string.IsNullOrEmpty(SubmitMessage) == false)
{
    <div class="alert alert-info">
        @SubmitMessage
    </div>
}

@using MyBlazor.Models.Form
@code {
    public MultipleSingleTextInputForm Form { get; set; }

    /// <summary>
    /// First tab list.
    /// </summary>
    public List<TabItem<SingleTextInputForm>> Tabs { get; set; } = new List<TabItem<SingleTextInputForm>>();

    /// <summary>
    /// Second tab list.
    /// </summary>
    public List<TabItem<SingleTextInputForm>> SecondaryTabs { get; set; } = new List<TabItem<SingleTextInputForm>>();

    public string SubmitMessage { get; set; }

    protected override void OnInitialized()
    {
        if (Form == null)
        {
            Form = new MultipleSingleTextInputForm
            {
                SingleForms = new List<SingleTextInputForm>(),
                SecondarySingleForms = new List<SingleTextInputForm>()
            };

            // Create 3 single form objects.
            var singleFormCount = 3;
            for (var i = 0; i < singleFormCount; i++)
            {
                // Create object reference.
                var singleForm = new SingleTextInputForm();

                // Add object to form's first list.
                Form.SingleForms.Add(singleForm);
                Tabs.Add(new TabItem<SingleTextInputForm>()
                {
                    Title = "Test #" + (i + 1),
                    // Assign the object reference.
                    Item = singleForm
                });
            }

            var secondaryFormCount = 2;
            for (var i = 0; i < secondaryFormCount; i++)
            {
                // Create object reference.
                var singleForm = new SingleTextInputForm();

                // Add object to form's secondary list.
                Form.SecondarySingleForms.Add(singleForm);
                SecondaryTabs.Add(new TabItem<SingleTextInputForm>()
                {
                    Title = "Test #" + (i + 1),

                    // Assign the object reference.
                    Item = singleForm
                });
            }
        }
    }

    /// <summary>
    /// Private method for handling the event on first tab's add button.
    /// </summary>
    /// <param name="tabCount"></param>
    private void OnClickAdd(int tabCount)
    {
        var singleForm = new SingleTextInputForm();

        Form.SingleForms.Add(singleForm);
        this.Tabs.Add(new TabItem<SingleTextInputForm>
        {
            Title = "Test #" + tabCount,
            Item = singleForm
        });
    }

    /// <summary>
    /// Private method for handling the event on secondary tab's add button.
    /// </summary>
    /// <param name="tabCount"></param>
    private void OnClickSecondaryAdd(int tabCount)
    {
        var singleForm = new SingleTextInputForm();

        Form.SecondarySingleForms.Add(singleForm);
        this.SecondaryTabs.Add(new TabItem<SingleTextInputForm>
        {
            Title = "Test #" + tabCount,
            Item = singleForm
        });
    }

    private void OnValidSubmit()
    {
        SubmitMessage = "Submitted!";
    }
}
